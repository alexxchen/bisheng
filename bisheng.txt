curl -L https://github.com/docker/compose/releases/tag/v2.20.3/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose​
chmod +x /usr/local/bin/docker-compose​
docker-compose -v

git config --global http.https://github.com/.proxy socks5://127.0.0.1:1080


git clone https://github.com/alexxchen/bisheng.git​

git pull origin v0.1.9.5

cd bisheng​/docker
sudo /home/station/Downloads/docker-compose-linux-x86_64 up -d


wget https://github.com/milvus-io/milvus/releases/download/v2.2.10/milvus-standalone-docker-compose.yml -O docker-compose.yml​
sudo /home/station/Downloads/docker-compose-linux-x86_64 up -d
or copy the content into docker-compose

# look for ports
sudo /home/station/Downloads/docker-compose-linux-x86_64 -f docker-compose.yml​ ps



sudo /home/station/Downloads/docker-compose-linux-x86_64 restart backend

sudo /home/station/Downloads/docker-compose-linux-x86_64 up --force-recreate -d


sudo docker network ls

sudo docker network inspect docker_proxy



sudo docker pull dataelement/bisheng-rt:0.0.4


sudo docker exec -it bisheng_rt_v00x sh


sudo ufw allow 3001/tcp


wget --no-check-certificate https://public2:qTongs8YdIwXSRPX@nexus.dataelem.com/repository/product/bisheng/private_model_respository-v0.0.4.tar.bz2
sudo su
ufw allow 1947/tcp
source venv/bin/activate
pip install elem-hasplib
elem_hasp_cli hasp install
elem_hasp_cli hasp_mgr -c /home/station/LLaMA/bisheng/transfer.id
chown -R station transfer.id
elem_hasp_cli hasp_mgr -u /home/station/LLaMA/bisheng/20231115_081344_0064.h2r
license_srv_host: http://localhost:1947/

# after docker-conpose up -d
curl -v -X POST http://localhost:10001/v1/config/update -H 'Content-Type: application/json' -d '{"rt_ep": "172.30.0.9:9001"}'
curl -v -X POST http://localhost:10001/v1/config/update -H 'Content-Type: application/json' -d '{
    "pdf_model_params": {
        "layout_ep": "https://bisheng.dataelem.com/api/v1/models/elem_layout_v1/infer",
        "cell_model_ep": "https://bisheng.dataelem.com/api/v1/models/elem_table_cell_detect_v1/infer",
        "rowcol_model_ep": "https://bisheng.dataelem.com/api/v1/models/elem_table_rowcol_detect_v1/infer",
        "table_model_ep": "https://bisheng.dataelem.com/api/v1/models/elem_table_detect_v1/infer",
        "ocr_model_ep": "https://bisheng.dataelem.com/api/v1/models/elem_ocr_collection_v3/infer"
    }
}
'

curl -X GET http://localhost:10001/v1/config


#test ES
curl -H "Content-Type: application/json" http://172.30.0.11:9200
sudo docker logs elasticsearch

#modify frontend
#sudo docker exec -it docker-nginx-1 bash
#cd /usr/share/nginx/html

# can build multiple times to same image name
cd bisheng/src/frontend/
sudo docker build -t local-bisheng-fronted:v0.1.9.5 ./

#build backend 
sudo docker cp docker-backend-1:/app/poetry.lock ./
sudo docker cp docker-backend-1:/app/pyproject.toml ./
sudo chown -R station poetry.lock pyproject.toml
sudo docker build -t local-bisheng-backend:v0.1.9.5 ./

sudo iptables --line -L DOCKER-USER
# delete rule
sudo iptables -D DOCKER-USER rule-num
# ATTENTION the order of the rules will impact the final effect
sudo iptables -I DOCKER-USER -s 172.30.0.4 -j REJECT
sudo iptables -I DOCKER-USER -s 172.30.0.4 -d 172.30.0.0/16 -j ACCEPT
sudo iptables -I DOCKER-USER -s 172.30.0.4 -d 10.10.42.114 -j ACCEPT
sudo iptables -I DOCKER-USER -s 172.30.0.4 -d 110.16.193.170 -j ACCEPT
# minio access
sudo iptables -I DOCKER-USER -s 172.30.0.4 -d 61.160.195.206 -j ACCEPT

sudo docker network connect docker_proxy one-api

# for remote minio
sudo ufw allow 9000/tcp
curl -I http://chat-db.cpolar.cn/minio/health/live


sudo docker cp bisheng_rt_v00x:/opt/bisheng-rt/log/bisheng-rt.log ./

