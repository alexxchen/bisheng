knowledges:
  unstructured_api_url: "https://bisheng.dataelem.com/api/v1/etl4llm/predict"  # 毕昇非结构化数据解析服务地址，提供包括OCR文字识别、表格识别、版式分析等能力。非必填，填写后能够提升PDF、图片、 
#   unstructured_api_url: "http://172.30.0.10:10001/v1/etl4llm/predict"
  embeddings: # 配置知识库的embedding服务，以下示例填写了两类embedding服务的配置方法，第一个是openai的embedding模型服务的配置方法，第二个是本地部署的embedding模型服务的配置方法，如果有多个可以添加多个
    text-embedding-ada-002: # 知识库下拉框中显示的embedding模型的名称，可自定义
      openai_api_base: "http://172.30.0.12:3000/v1"
      openai_proxy: "" # 如果是自己代理的服务地址，则填在这里
      openai_api_key: "sk-WEFAPx37PwJaXHYc142dAa2e2bAd4d469f396777D2Eb94F6" # 私有的，openai账号的key
    bge-large-en-v1.5: # 知识库下拉框中显示的embedding模型的名称，可自定义
      host_base_url: "http://172.30.0.9:9001/v2.1/models" # 在模型管理页面中已上线的embedding服务的地址
      model: "bge-large-en-v1.5" # 在模型管理页面中已上线的embedding模型的名称
    # e5-large-v2: # 知识库下拉框中显示的embedding模型的名称，可自定义
    #   host_base_url: "http://172.30.0.9:9001/v2.1/models" # 在模型管理页面中已上线的embedding服务的地址
    #   model: "e5-large-v2" # 在模型管理页面中已上线的embedding模型的名称
  vectorstores:
    # Milvus 最低要求cpu 4C 8G 推荐4C 16G
    Milvus: # 如果需要切换其他vectordb，确保其他服务已经启动，然后配置对应参数
      connection_args: {'host': '172.30.0.8', 'port': '19530', 'user': '', 'password': '', 'secure': False}
    # 可选配置，有些类型的场景使用ES可以提高召回效果
    ElasticKeywordsSearch:
      elasticsearch_url: 'http://172.30.0.11:9200'
    #   ssl_verify: "{'ca_certs': False, 'basic_auth': ('elastic', 'changeme'), 'verify_certs': False}"
      ssl_verify: "{'basic_auth': ('elastic', 'changeme'), 'timeout': 30}"
  minio: # 如果要支持溯源功能，由于溯源会展示源文件，必须配置 oss 存储 local:  172.30.0.7:9000 ,schme is controled by python code defaule to http
    MINIO_ENDPOINT: "chat-db.cpolar.cn"
    MINIO_SHAREPOIN: "chat-db.cpolar.cn"
    MINIO_ACCESS_KEY: "minioadmin"
    MINIO_SECRET_KEY: "minioadmin"
    MINIO_SECURE: True

# 全局配置大模型     
default_llm:
  model: "chatglm3-6b" # 在模型管理页面中已上线的大模型服务的名称
  host_base_url: "https://bisheng.dataelem.com/api/v1/models" # 在模型管理页面中已上线的大模型服务的地址

# 模型访问的超时配置
llm_request:
  request_timeout: 600
  max_retries: 6
  stream: true
